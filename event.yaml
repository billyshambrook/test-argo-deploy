apiVersion: argoproj.io/v1alpha1
kind: Workflow
metadata:
  name: hello-world  # Name of this Workflow
spec:
  synchronization:
    mutex:
      name: workflow
  entrypoint: whalesay        # Defines "whalesay" as the "main" template
  templates:
  - name: whalesay            # Defining the "whalesay" template
    container:
      image: docker/whalesay
      command: [cowsay]
      args: ["hello worlds"]   # This template runs "cowsay" in the "whalesay" image with arguments "hello world"
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: operate-workflow-sa
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: operate-workflow-role
rules:
  - apiGroups:
      - argoproj.io
    verbs:
      - "*"
    resources:
      - workflows
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: operate-workflow-role-binding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: operate-workflow-role
subjects:
  - kind: ServiceAccount
    name: operate-workflow-sa
---
apiVersion: argoproj.io/v1alpha1
kind: EventSource
metadata:
  name: resource
spec:
  template:
    serviceAccountName: operate-workflow-sa
  resource:
    example:
      namespace: app-team
      group: argoproj.io
      version: v1alpha1
      resource: workflows
      eventTypes:
        - UPDATE
      # optional.
      filter:
        afterStart: true
        labels:
          - key: app
            operation: "=="
            value: my-workflow
---
apiVersion: argoproj.io/v1alpha1
kind: Sensor
metadata:
  name: hello-world
  labels:
    app: hello-world
spec:
  template:
    serviceAccountName: operate-workflow-sa
  dependencies:
    - name: workflow-update
      eventSourceName: resource
      eventName: update
  triggers:
    - template:
        name: hello-world
        argoWorkflow:
          operation: resubmit
